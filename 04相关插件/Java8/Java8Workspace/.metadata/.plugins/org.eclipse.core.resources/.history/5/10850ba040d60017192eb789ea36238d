package Chap3;

import java.io.BufferedReader;
import java.io.FileReader;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.Callable;
import java.util.function.Function;
import java.util.function.Predicate;

import org.junit.Test;

public class Chap3Test {

	@Test
	public void test42() throws Exception {
		System.out.println(processFile((BufferedReader reader) -> reader.readLine() + reader.readLine()));
	}
	
	@Test
	public void test44(){
		List<Integer> list=new ArrayList<Integer>();
		list.add(1);
		list.add(2);
		list.add(3);
		
		testPredicate(list, (Integer i)->i.intValue()>0);
	}
	
	/**
	 * 测试参数类型相同的lambada
	 */
	@Test
	public void test57(){
//		Supplier<List<String>> supplier=ArrayList::new;
		List<String> s1=new ArrayList<String>();
		s1.add("1");s1.add("2");s1.add("3");s1.add("4");
		List<String> s2=new ArrayList<String>();
		s1.add("1");s1.add("3");s1.add("5");s1.add("7");
		
		List<String> result=combaine(s1, s2, (List l1)->l1.contains);
	}
	
	
	static List<String> combaine(List<String> list1,List<String> list2,Function<List<String>,List<String>> f){
		for (String string : list1) {
			list2=f.apply(list1);
		}
		return list2;
	}
	public static <T> void testPredicate(List<T> list,Predicate<T> p) {
		for (T t : list) {
			if(p.test(t)){
				System.out.println(t);
			}
		}
	}
	
	public static String processFile(IFileProcessor p) throws Exception {
		BufferedReader reader = new BufferedReader(new FileReader("F:\\AllProject\\04相关插件\\Java8\\Java8Workspace\\test.txt"));
		return p.process(reader);
	}

	/**
	 * 测试函数式借口Callable
	 * 
	 * @return
	 */
	public Callable<String> fetch() {
		return () -> "Tricky example ;-)";
	}

}
